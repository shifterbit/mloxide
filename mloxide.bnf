<program> ::= <declarations> | <declarations> <expression> | <expression>
<declarations> ::= <declaration> <declarations> | <declaration>
<declaration> ::= <val_declaration> ";" 
<expression> ::= <equality> | <if_expression>
<val_declaration> ::= "val" <wp> "=" <expression> | "val" <wp> ":" <wp> <type> <wp>  "=" <expression>
<let_expression> ::= "let" <wp> <declarations> <wp> "in" <wp> <expression> <wp> "end"
<if_expression> ::= "if" <wp> <expression> <wp> "then" <wp> <expression> <wp> "else" <wp> <expression>
<equality> ::= <comparison> ("==" | "!=") <equality> | <comparison>
<comparison> ::= <term> (">" | ">=" | "<=" | "<") <comparison> | <term>
<term> ::= <factor> ("+" | "-") <term> | <factor>
<factor> ::= <unary> ("/" | "*") <factor> | <unary>
<unary> ::= ("~") <unary> | <primary>
<primary> ::= <integer> | <float> | <boolean> | "(" <expression> ")" | <identifier> | "(" ")" | <tuple>
<float> ::= <integer> "." <integer>
<integer> ::= <digit> | <integer> <digit>
<digit> ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"
<boolean> ::= "true" | "false"


<tuple> ::= "(" <tuple_values> ")"
<tuple_values> ::= <expression> | <tuple_values> "," <expression>


<type> ::= <identifier>
<identifier> ::= <letter> <identifier_text>
<identifier_text> ::= <identifier_character> <identifier_text> | <identifier_character>
<identifier_character> ::= <letter> | <digit> | "_"
<letter> ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z"

; Whitespace
<wp> ::= <wpc> <wp> | <wpc> | <wp> <wp>
<wpc> ::= " " | "\n"